// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CentroEducativoAPISQL.Migrations
{
    [DbContext(typeof(MiDbContext))]
    [Migration("20231009133758_Migracion_1")]
    partial class Migracion_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Clase", b =>
                {
                    b.Property<int>("id_clase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_clase"));

                    b.Property<string>("hora_fin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("hora_inicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("id_curso")
                        .HasColumnType("int");

                    b.Property<string>("id_usuario")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("materia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_clase");

                    b.HasIndex("id_curso");

                    b.HasIndex("id_usuario");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Comentario", b =>
                {
                    b.Property<int>("id_comentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_comentario"));

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaHoraComentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_noticia")
                        .HasColumnType("int");

                    b.Property<string>("id_usuario")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_comentario");

                    b.HasIndex("id_noticia");

                    b.HasIndex("id_usuario");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Curso", b =>
                {
                    b.Property<int>("id_curso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_curso"));

                    b.Property<string>("aula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("descripcion_curso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre_curso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_curso");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Noticia", b =>
                {
                    b.Property<int>("id_noticia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_noticia"));

                    b.Property<string>("fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id_usuario")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("imagenes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parrafos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("redactor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_noticia");

                    b.HasIndex("id_usuario");

                    b.ToTable("Noticias");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Pago", b =>
                {
                    b.Property<int>("id_pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_pago"));

                    b.Property<string>("concepto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fecha_pago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("fecha_vencimiento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("id_usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("monto")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("tipo_pago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_pago");

                    b.HasIndex("id_usuario");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Rol", b =>
                {
                    b.Property<int>("id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_rol"));

                    b.Property<string>("tipo_rol")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id_rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.SolicitudInscripcion", b =>
                {
                    b.Property<int>("id_solicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_solicitud"));

                    b.Property<string>("correoSolicitante")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("fechaNacimientoSolicitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id_usuario")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nivelEducativoSolicitante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreCompletoSolicitante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_solicitud");

                    b.HasIndex("id_usuario");

                    b.ToTable("SolicitudesInscripcion");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Usuario", b =>
                {
                    b.Property<string>("dni")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("contraseña")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fechaNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_clase")
                        .HasColumnType("int");

                    b.Property<int?>("id_curso")
                        .HasColumnType("int");

                    b.Property<int>("id_rol")
                        .HasColumnType("int");

                    b.Property<string>("nombreCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("dni");

                    b.HasIndex("correo")
                        .IsUnique();

                    b.HasIndex("dni")
                        .IsUnique();

                    b.HasIndex("id_clase");

                    b.HasIndex("id_curso");

                    b.HasIndex("id_rol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Clase", b =>
                {
                    b.HasOne("CentroEducativoAPISQL.Modelos.Curso", "Curso")
                        .WithMany("Clases")
                        .HasForeignKey("id_curso")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CentroEducativoAPISQL.Modelos.Usuario", "Usuarios")
                        .WithMany()
                        .HasForeignKey("id_usuario");

                    b.Navigation("Curso");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Comentario", b =>
                {
                    b.HasOne("CentroEducativoAPISQL.Modelos.Noticia", "Noticia")
                        .WithMany("Comentarios")
                        .HasForeignKey("id_noticia")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CentroEducativoAPISQL.Modelos.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Noticia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Noticia", b =>
                {
                    b.HasOne("CentroEducativoAPISQL.Modelos.Usuario", "Usuario")
                        .WithMany("Noticias")
                        .HasForeignKey("id_usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Pago", b =>
                {
                    b.HasOne("CentroEducativoAPISQL.Modelos.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.SolicitudInscripcion", b =>
                {
                    b.HasOne("CentroEducativoAPISQL.Modelos.Usuario", "Usuario")
                        .WithMany("SolicitudesInscripcion")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Usuario", b =>
                {
                    b.HasOne("CentroEducativoAPISQL.Modelos.Clase", "clase")
                        .WithMany()
                        .HasForeignKey("id_clase")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CentroEducativoAPISQL.Modelos.Curso", "Cursos")
                        .WithMany("Usuarios")
                        .HasForeignKey("id_curso")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CentroEducativoAPISQL.Modelos.Rol", "RolesUsuarios")
                        .WithMany("Usuarios")
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cursos");

                    b.Navigation("RolesUsuarios");

                    b.Navigation("clase");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Curso", b =>
                {
                    b.Navigation("Clases");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Noticia", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CentroEducativoAPISQL.Modelos.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Noticias");

                    b.Navigation("Pagos");

                    b.Navigation("SolicitudesInscripcion");
                });
#pragma warning restore 612, 618
        }
    }
}
